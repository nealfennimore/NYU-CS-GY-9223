#! /usr/bin/env bash

set -Eeuo pipefail

INPUT=""

BASE64_REGEX="^[A-Za-z0-9+/]{4}*([A-Za-z0-9+/]{4}|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)+$"
HEX_REGEX="^[0-9a-f]+$"

clean_input() {
    sed -i input -e 's/"//g' -e "s/'//g" -e 's/\\//g'
}

echo -n "$INPUT" >input
while true; do

    FILE="$(file input)"

    if [[ $FILE =~ "ASCII" ]]; then
        clean_input
    elif [[ $FILE =~ "bzip2" ]]; then
        mv input output.bz2
        bzip2 -df output.bz2
        cp output input
        continue
    fi

    INPUT="$(cat input)"
    if [[ "$INPUT" =~ "flag{" ]]; then
        echo "$INPUT"
        rm input output
        break
    elif [[ "$INPUT" =~ $HEX_REGEX ]]; then
        echo "$INPUT" | xxd -r -p >output
    elif [[ "$INPUT" =~ $BASE64_REGEX ]]; then
        echo "$INPUT" | base64 -d >output
    fi

    cp output input
done
